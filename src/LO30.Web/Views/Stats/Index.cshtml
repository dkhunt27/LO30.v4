@model List<PlayerStatTeamViewModel>

@{
  ViewData["Title"] = "Stats";
}

<div class="row wrapper border-bottom white-bg page-heading">
  <div class="col-lg-4">
    <h2>Stats</h2>
    <ol class="breadcrumb">
      <li>
        <a href="@Url.Action("Home", "Index")">Home</a>
      </li>
      <li class="active">
        <strong>Stats</strong>
      </li>
    </ol>
  </div>
  <div class="col-lg-2">

  </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
  <div class="row">
    <div class="col-lg-12">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <h5>@ViewData["SeasonName"] @ViewData["SeasonType"]</h5>
        </div>
        <div class="ibox-content">
          <div>
            <table id="dataTables-stats" class="table table-striped table-bordered table-hover" width="100%">
              <thead>
                <tr>
                  <th class="text-left all">Rank</th>
                  <th class="text-left all">Team</th>
                  <th class="text-left min-mobile-l">Player</th>
                  <th class="text-left min-mobile-l">Pos</th>
                  <th class="text-left min-mobile-l">Line</th>
                  <th class="text-right min-mobile-l">GP</th>
                  <th class="text-right min-tablet-p">G</th>
                  <th class="text-right min-tablet-p">A</th>
                  <th class="text-right min-tablet-p">P</th>
                  <th class="text-right all">PIM</th>
                  <th class="text-right min-tablet-l">PPG</th>
                  <th class="text-right min-tablet-l">SHG</th>
                  <th class="text-right min-tablet-l">GWG</th>
                  <th class="text-right min-desktop">Sub</th>
                </tr>
              </thead>
              @*<tbody>
                @foreach (var item in Model.Select((value, i) => new { i, value }))
                {
                  <tr>
                    <td class="text-left"></td>
                    <td class="text-left"><a ng-href="@Url.Action("Index", "Teams", new { TeamId = @item.value.TeamId })">@item.value.TeamCode</a></td>
                    <td class="text-left"><a ng-href="@Url.Action("Index", "Teams", new { TeamId = @item.value.TeamId })">@item.value.TeamNameShort</a></td>
                    <td class="text-left"><a ng-href="@Url.Action("Index", "Teams", new { TeamId = @item.value.TeamId })">@item.value.TeamNameLong</a></td>
                    <td class="text-left"><a ng-href="@Url.Action("Index", "Players", new { PlayerId = @item.value.PlayerId, PlayerType = "Skater" })">@item.value.PlayerNameCode</a></td>
                    <td class="text-left"><a ng-href="@Url.Action("Index", "Players", new { PlayerId = @item.value.PlayerId, PlayerType = "Skater" })">@item.value.PlayerNameShort</a></td>
                    <td class="text-left"><a ng-href="@Url.Action("Index", "Players", new { PlayerId = @item.value.PlayerId, PlayerType = "Skater" })">@item.value.PlayerNameLong</a></td>
                    <td class="text-left">@item.value.Position</td>
                    <td class="text-left">@item.value.Line</td>
                    <td class="text-right">@item.value.Games</td>
                    <td class="text-right">@item.value.Goals</td>
                    <td class="text-right">@item.value.Assists</td>
                    <td class="text-right">@item.value.Points</td>
                    <td class="text-right">@item.value.PenaltyMinutes</td>
                    <td class="text-right">@item.value.PowerPlayGoals</td>
                    <td class="text-right">@item.value.ShortHandedGoals</td>
                    <td class="text-right">@item.value.GameWinningGoals</td>
                    <td class="text-right">@item.value.Sub</td>
                  </tr>
                }
              </tbody>*@
              <tfoot>
                <tr>
                  <th class="text-left">Rank</th>
                  <th class="text-left">Team</th>
                  <th class="text-left">Player</th>
                  <th class="text-right">Pos</th>
                  <th class="text-right">Line</th>
                  <th class="text-right">GP</th>
                  <th class="text-right">G</th>
                  <th class="text-right">A</th>
                  <th class="text-right">P</th>
                  <th class="text-right">PIM</th>
                  <th class="text-right">PPG</th>
                  <th class="text-right">SHG</th>
                  <th class="text-right">GWG</th>
                  <th class="text-right">Sub</th>
                </tr>
              </tfoot>
            </table>

          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@section Styles {
  <environment names="Development,Staging,Production">
    <link rel="stylesheet" href="~/lib/datatables.net-bs/css/dataTables.bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/datatables.net-buttons-bs/css/buttons.bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/datatables.net-responsive-bs/css/responsive.bootstrap.min.css" />
  </environment>
}


@section Scripts {
  <environment names="Development,Staging,Production">
    <script src="~/lib/datatables.net/js/jquery.dataTables.js"></script>
    <script src="~/lib/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="~/lib/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/lib/datatables.net-buttons-bs/js/buttons.bootstrap.min.js"></script>
    <script src="~/lib/pdfmake/build/pdfmake.min.js"></script>
    <script src="~/lib/pdfmake/build/vfs_fonts.js"></script>
    <script src="~/lib/jszip/dist/jszip.js"></script>
    <script src="~/lib/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="~/lib/datatables.net-buttons/js/buttons.colVis.min.js"></script>
    <script src="~/lib/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/lib/datatables.net-responsive-bs/js/responsive.bootstrap.js"></script>
  </environment>

  <script type="text/javascript">
    $(document).ready(function () {

      var buildPlayerName = function (playerNameFirst, playerNameLast, playerNameSuffix, limit) {
        var playerName = "";

        if (!playerNameSuffix) {
          if (playerNameFirst.length + playerNameLast.length + 1 <= limit) {
            playerName = playerNameFirst + " " + playerNameLast;
          } else if (3 + playerNameLast.length + 1 <= limit) {
            playerName = playerNameFirst.substr(0, 1) + ". " + playerNameLast;

            if (playerName.Length > limit) {
              playerName = playerName.substr(0, limit - 1) + ".";
            }
          }
        } else {
          if (playerNameFirst.length + playerNameLast.length + playerNameSuffix.length + 3 <= limit) {
            playerName = playerNameFirst + " " + playerNameLast + ", " + playerNameSuffix;
          }
          else if (3 + playerNameLast.length + playerNameSuffix.length + 2 <= limit) {
            playerName = playerNameFirst.substr(0, 1) + ". " + playerNameLast + ", " + playerNameSuffix;
          } else {
            playerName = buildPlayerName(playerNameFirst, playerNameLast, string.Empty, limit);
          }
        }

        return playerName;
      }

      var buildPlayerNameCode = function (playerNameFirst, playerNameLast, playerNameSuffix) {
        return buildPlayerName(playerNameFirst, playerNameLast, playerNameSuffix, 15);
      }

      var buildPlayerNameShort = function (playerNameFirst, playerNameLast, playerNameSuffix) {
        return buildPlayerName(playerNameFirst, playerNameLast, playerNameSuffix, 25);
      }

      var buildPlayerNameLong = function (playerNameFirst, playerNameLast, playerNameSuffix) {
        return buildPlayerName(playerNameFirst, playerNameLast, playerNameSuffix, 50);
      }

      var seasonId = "@ViewData["SeasonId"]";
      var playoffs = "@ViewData["Playoffs"]";

      var width = $(window).width();

      //$('#dataTables-stats tfoot th').each(function () {
      //  var title = $(this).text();
      //  $(this).html('<input type="text" placeholder="Search ' + title + '" />');
      //});

      var table = $('#dataTables-stats').DataTable({
        // dom: '<"html5buttons"B>lTfgitp',
        "dom": "<'row'<'col-sm-4'l><'col-sm-4'f><'col-sm-4'<'html5buttons'B>>><'row'<'col-sm-12'rt>><'row'<'col-sm-5'i><'col-sm-7'p>>",
        "buttons": [
          "colvis", "copyHtml5", "excelHtml5", { extend: 'pdfHtml5', orientation: 'landscape', pageSize: 'letter' }
        ],
        "paging": true,
        "page-length": 25,
        "order": [[8, "desc"]],
        "info": true,
        "responsive": true,
        "columns": [
          {
            "data": null, // can be null or undefined
            "defaultContent": ""
          },
          {
            "data": "teamNameToDisplay",
            "render": function (data, type, row) {
              var result = row.teamNameLong;
              if (width <= 800) {
                result = row.teamCode;
              } else if (width <= 1200) {
                result = row.teamNameShort;
              }
              return result;
            }
          },
          {
            "data": "playerNameToDisplay",
            "render": function (data, type, row) {
              if (width <= 800) {
                return buildPlayerNameCode(row.playerFirstName, row.playerLastName, row.playerSuffix);
              } else if (width <= 1200) {
                return buildPlayerNameShort(row.playerFirstName, row.playerLastName, row.playerSuffix);
              } else {
                return buildPlayerNameLong(row.playerFirstName, row.playerLastName, row.playerSuffix);;
              }
            }
          },
          { "data": "position" },
          { "data": "line" },
          { "data": "games" },
          { "data": "goals" },
          { "data": "assists" },
          { "data": "points" },
          { "data": "penaltyMinutes" },
          { "data": "powerPlayGoals" },
          { "data": "shortHandedGoals" },
          { "data": "gameWinningGoals" },
          { "data": "sub" },
          {
            "data": "teamCode",
            "visible": false
          },
          {
            "data": "teamNameShort",
            "visible": false
          },
          {
            "data": "teamNameLong",
            "visible": false
          },
          {
            "data": "playerFirstName",
            "visible": false
          },
          {
            "data": "playerLastName",
            "visible": false
          },
          {
            "data": "playerSuffix",
            "visible": false
          }
        ],
        "ajax": {
          "url": "api/playerstatteams/seasons/" + seasonId + "/playoffs/" + playoffs,
          "type": "GET",
          "dataSrc": ""
        }
      });

      //table.columns().every(function () {
      //  var that = this;

      //  $('input', this.footer()).on('keyup change', function () {
      //    if (that.search() !== this.value) {
      //      that
      //          .search(this.value)
      //          .draw();
      //    }
      //  });
      //});

      table.on('order.dt search.dt', function () {
        table.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
          cell.innerHTML = i + 1;
        });
      }).draw();
    });
  </script>
}